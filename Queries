/* Investigate a Relational Database Done BY DUAA AL ABBAS */

------------------------------------------------------------------

/* in this query I used Basic SQL , SQL Joins, SQL Aggregarations 
And Subquiries  */

/* Question From Set #1 used in Slide 1 Results
Create a query that lists each movie, film category
it is classified in and the number of times it has been rented out */

With sub1 AS(
SELECT fil.title, cat.name,
       COUNT(rental.rental_id) AS rental_count,
       CONCAT (title, ' _ ' , name) AS title_Category 
     FROM category AS cat
     JOIN film_category AS filcat
        ON cat.category_id = filcat.category_id
        
      JOIN film AS fil
        ON fil.film_id = filcat.film_id

      JOIN inventory 
        ON fil.film_id = inventory.film_id

      JOIN rental 
        ON inventory.inventory_id = rental.inventory_id

AND cat.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')

GROUP BY cat.name,fil.title
ORDER BY rental_count DESC)

SELECT name, sum (rental_count) ,
(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER()) percentage
  FROM sub1
  GROUP BY name ;


------------------------------------------------------------------

/* in this query I used Basic SQL , SQL Joins, SQL Aggregarations ,
 and window functions */

/* Question From Set #1 used in Slide 2 Results. 
provide a table with the movie titles and 
divide them into 4 levels 
(1st, 2nd, thirdr, and final_quarter) 
based on the quartiles (25%, 50%, 75%) 
of the rental duration for movies across all categories? */

SELECT f.title AS title,c.name AS category,
  f.rental_duration AS rental_duration,
  NTILE(4) OVER (ORDER BY f.rental_duration) AS Standard_quartiles
FROM film f
JOIN film_category fc
  ON f.film_id = fc.film_id
JOIN category c
  ON c.category_id = fc.category_id
WHERE c.name IN ('Animation', 'Children', 'Classics', 'Comedy', 'Family', 'Music')
GROUP BY 1,2,3
ORDER BY 3 DESC;

------------------------------------------------------------------

/* in this query I used Basic SQL , SQL Joins, SQL Aggregarations */

/* Question inspired From Set #2  used in Slide 3 Results
write a query to capture the customer name and total payment amount 
for each 10 paying customers? */

SELECT c.first_name || '_' || c.last_name AS Customer_Full_name, 
     SUM(p.amount) AS Total_Amount

   FROM customer c
     JOIN payment p
     ON p.customer_id = c.customer_id
   
    GROUP BY 1
    ORDER BY 2 DESC
      LIMIT 10;

------------------------------------------------------------------


/* in this query I used Basic SQL , SQL Joins, SQL Aggregarations,Subqueries*/

/* Question used in Slide 4 Results
Create a query that finds out the Film title, Special features
and Rental_duration considering it is
PG 13 and the length of the movie is no longer than 3 hours*/

SELECT title , special_features ,rental_duration
FROM Film AS F
 JOIN 
   (SELECT Film_id, length , rating
    FROM film
    WHERE length >= 180 AND rating = 'PG-13'
    GROUP BY Film_id ) Sub1
 
 ON F.Film_id=Sub1.Film_id


